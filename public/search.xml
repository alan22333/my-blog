<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Solidity中的自定义错误</title>
    <url>/2025/05/03/Solidity%E4%B8%AD%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Solidity 0.8.4 引入了自定义错误(Custom Errors)功能，这是一种比传统 <code>require</code> 语句更高效的错误处理方式，可以显著节省 Gas 消耗。</p>
<h2 id="为什么自定义错误能节省-Gas"><a href="#为什么自定义错误能节省-Gas" class="headerlink" title="为什么自定义错误能节省 Gas"></a>为什么自定义错误能节省 Gas</h2><ol>
<li><p><strong>更小的字节码</strong>：自定义错误不需要存储错误字符串</p>
</li>
<li><p><strong>更低的运行时成本</strong>：回滚时只需传递 4 字节的选择器，而不是完整的字符串</p>
</li>
<li><p><strong>更少的存储开销</strong>：字符串错误信息需要存储在合约字节码中</p>
</li>
</ol>
<h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 定义自定义错误</span><br><span class="line">error InsufficientBalance(uint256 available, uint256 required);</span><br><span class="line"></span><br><span class="line">contract MyContract &#123;</span><br><span class="line">    function withdraw(uint256 amount) public &#123;</span><br><span class="line">        uint256 balance = address(this).balance;</span><br><span class="line">        if (balance &lt; amount) &#123;</span><br><span class="line">            revert InsufficientBalance(balance, amount);</span><br><span class="line">        &#125;</span><br><span class="line">        // 其他逻辑...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><h3 id="1-为常见错误条件定义明确的错误"><a href="#1-为常见错误条件定义明确的错误" class="headerlink" title="1. 为常见错误条件定义明确的错误"></a>1. 为常见错误条件定义明确的错误</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error Unauthorized();</span><br><span class="line">error InvalidAddress();</span><br><span class="line">error ValueTooLow(uint256 min, uint256 actual);</span><br><span class="line">error DeadlineExpired(uint256 deadline);</span><br></pre></td></tr></table></figure>


<h3 id="2-在复杂合约中组织错误"><a href="#2-在复杂合约中组织错误" class="headerlink" title="2. 在复杂合约中组织错误"></a>2. 在复杂合约中组织错误</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">library Errors &#123;</span><br><span class="line">    error Unauthorized();</span><br><span class="line">    error InsufficientBalance(uint256 available, uint256 required);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract MyContract &#123;</span><br><span class="line">    using Errors for *;</span><br><span class="line">    </span><br><span class="line">    function withdraw(uint256 amount) public &#123;</span><br><span class="line">        if (msg.sender != owner) revert Errors.Unauthorized();</span><br><span class="line">        // ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="3-提供有用的上下文信息"><a href="#3-提供有用的上下文信息" class="headerlink" title="3. 提供有用的上下文信息"></a>3. 提供有用的上下文信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error TransferFailed(address from, address to, uint256 amount);</span><br><span class="line"></span><br><span class="line">function transfer(address to, uint256 amount) public &#123;</span><br><span class="line">    bool success = _transfer(msg.sender, to, amount);</span><br><span class="line">    if (!success) revert TransferFailed(msg.sender, to, amount);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="4-与-require-对比"><a href="#4-与-require-对比" class="headerlink" title="4. 与 require 对比"></a>4. 与 require 对比</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 传统方式 - 消耗更多 Gas</span><br><span class="line">require(balance &gt;= amount, &quot;Insufficient balance&quot;);</span><br><span class="line"></span><br><span class="line">// 自定义错误方式 - 更高效</span><br><span class="line">if (balance &lt; amount) revert InsufficientBalance(balance, amount);</span><br></pre></td></tr></table></figure>


<h3 id="5-在接口中定义错误"><a href="#5-在接口中定义错误" class="headerlink" title="5. 在接口中定义错误"></a>5. 在接口中定义错误</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">interface IERC20 &#123;</span><br><span class="line">    error InsufficientBalance();</span><br><span class="line">    error InsufficientAllowance();</span><br><span class="line">    </span><br><span class="line">    function transfer(address to, uint256 amount) external;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="Gas-节省示例"><a href="#Gas-节省示例" class="headerlink" title="Gas 节省示例"></a>Gas 节省示例</h2><p>假设一个简单的转账合约：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 使用 require</span><br><span class="line">function transferWithRequire(address to, uint256 amount) public &#123;</span><br><span class="line">    require(balances[msg.sender] &gt;= amount, &quot;Insufficient balance&quot;);</span><br><span class="line">    balances[msg.sender] -= amount;</span><br><span class="line">    balances[to] += amount;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 使用自定义错误</span><br><span class="line">error InsufficientBalance(uint256 available, uint256 required);</span><br><span class="line"></span><br><span class="line">function transferWithError(address to, uint256 amount) public &#123;</span><br><span class="line">    uint256 available = balances[msg.sender];</span><br><span class="line">    if (available &lt; amount) revert InsufficientBalance(available, amount);</span><br><span class="line">    balances[msg.sender] = available - amount;</span><br><span class="line">    balances[to] += amount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p><strong>Gas 消耗比较</strong>：<br>• <code>require</code> 版本：约 22,000 Gas（成功时），失败时更高<br>• 自定义错误版本：约 21,500 Gas（成功时），失败时显著更低</p>
<p>失败时的 Gas 节省更为明显，因为不需要存储和传递错误字符串。</p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>自定义错误是 Solidity 中优化 Gas 消耗的重要工具，特别是在频繁可能失败的函数中。通过遵循这些最佳实践，你可以编写出更高效、更清晰的智能合约代码。</p>
]]></content>
      <categories>
        <category>Solidity学习</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Solidity</tag>
      </tags>
  </entry>
  <entry>
    <title>gitcommit</title>
    <url>/2025/05/03/gitcommit/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在使用 <code>git commit -m</code> 提交代码时，通常会在提交信息中使用一些常见的前缀来描述提交的类型和目的。这些前缀有助于团队更好地理解提交的内容，尤其是在查看提交历史或生成变更日志时。以下是一些常用的前缀及其含义：</p>
<hr>
<h3 id="1-fix"><a href="#1-fix" class="headerlink" title="1. fix"></a>1. <strong><code>fix</code></strong></h3><p>表示修复了一个 bug 或问题。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;fix: 修复登录页面无法加载的问题&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="2-feat"><a href="#2-feat" class="headerlink" title="2. feat"></a>2. <strong><code>feat</code></strong></h3><p>表示新增了一个功能。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;feat: 添加用户注册功能&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="3-docs"><a href="#3-docs" class="headerlink" title="3. docs"></a>3. <strong><code>docs</code></strong></h3><p>表示文档相关的更改（如 README、注释等）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;docs: 更新项目 README 文件&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="4-style"><a href="#4-style" class="headerlink" title="4. style"></a>4. <strong><code>style</code></strong></h3><p>表示代码风格的更改（如格式化、缩进等），不涉及功能或逻辑的修改。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;style: 格式化代码缩进&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="5-refactor"><a href="#5-refactor" class="headerlink" title="5. refactor"></a>5. <strong><code>refactor</code></strong></h3><p>表示代码重构，既不修复 bug 也不添加新功能。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;refactor: 重构用户模块的代码结构&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="6-test"><a href="#6-test" class="headerlink" title="6. test"></a>6. <strong><code>test</code></strong></h3><p>表示测试相关的更改（如添加或修改测试用例）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;test: 添加用户登录功能的单元测试&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="7-chore"><a href="#7-chore" class="headerlink" title="7. chore"></a>7. <strong><code>chore</code></strong></h3><p>表示日常维护或工具相关的更改（如依赖更新、构建配置等）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;chore: 更新项目依赖包&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="8-perf"><a href="#8-perf" class="headerlink" title="8. perf"></a>8. <strong><code>perf</code></strong></h3><p>表示性能优化相关的更改。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;perf: 优化数据库查询性能&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="9-ci"><a href="#9-ci" class="headerlink" title="9. ci"></a>9. <strong><code>ci</code></strong></h3><p>表示持续集成（CI）相关的更改（如 GitHub Actions、Travis CI 等）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;ci: 添加 GitHub Actions 自动化测试&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="10-revert"><a href="#10-revert" class="headerlink" title="10. revert"></a>10. <strong><code>revert</code></strong></h3><p>表示回滚之前的提交。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;revert: 回滚错误的用户注册功能提交&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="11-build"><a href="#11-build" class="headerlink" title="11. build"></a>11. <strong><code>build</code></strong></h3><p>表示构建系统或外部依赖的更改（如 Webpack、Gulp 等）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;build: 更新 Webpack 配置&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="12-wip"><a href="#12-wip" class="headerlink" title="12. wip"></a>12. <strong><code>wip</code></strong></h3><p>表示正在进行中的工作（Work In Progress），通常用于临时提交。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;wip: 用户模块开发中&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="13-hotfix"><a href="#13-hotfix" class="headerlink" title="13. hotfix"></a>13. <strong><code>hotfix</code></strong></h3><p>表示紧急修复生产环境中的问题。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;hotfix: 紧急修复支付接口崩溃问题&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="14-init"><a href="#14-init" class="headerlink" title="14. init"></a>14. <strong><code>init</code></strong></h3><p>表示项目初始化或首次提交。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;init: 初始化项目&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="15-merge"><a href="#15-merge" class="headerlink" title="15. merge"></a>15. <strong><code>merge</code></strong></h3><p>表示合并分支。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;merge: 合并 feature/login 分支到 main&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="提交信息格式建议"><a href="#提交信息格式建议" class="headerlink" title="提交信息格式建议"></a>提交信息格式建议</h3><p>通常推荐使用以下格式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;类型&gt;: &lt;描述&gt;</span><br></pre></td></tr></table></figure>


<p>例如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;feat: 添加用户登录功能&quot;</span><br></pre></td></tr></table></figure>


<p>如果需要更详细的描述，可以使用多行提交信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;fix: 修复登录页面无法加载的问题</span><br><span class="line"></span><br><span class="line">- 修复了登录页面因 API 接口错误导致的加载失败问题</span><br><span class="line">- 优化了错误提示信息&quot;</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li><p>使用清晰的前缀（如 <code>fix</code>、<code>feat</code>、<code>docs</code> 等）来描述提交的类型。</p>
</li>
<li><p>提交信息应简洁明了，便于团队协作和代码审查。</p>
</li>
<li><p>如果需要更详细的描述，可以使用多行提交信息。</p>
</li>
</ul>
<p>这些规范可以帮助团队更好地管理提交历史，并生成更有意义的变更日志。</p>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2025/05/03/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>考研经验分享</title>
    <url>/2025/05/04/%E8%80%83%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>突发奇想写一下考研的经验分享，希望帮到有需要的同学</p>
</blockquote>
<p>  鼠鼠一战985自命题遗憾败北，二战京区22408的211稳稳上岸，两年里摸索了很多</p>
<p>  原本感觉能写很多，但是时间相距甚远，记忆模糊，简单写一些重要的内容</p>
<p>  以下观点，纯属主观，博君一笑，请自行斟酌，不要和鼠鼠扯皮</p>
<h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h3><p>在现在这个时代，作为在校大学生首先需要对“考研”这件事做一个权衡，思考一些问题，例如：</p>
<ul>
<li><p>我是否适合读研？</p>
</li>
<li><p>我是否需要读研？</p>
</li>
<li><p>读研能否给我想要的“东西”？</p>
</li>
<li><p>我毕业能不能找到工作？</p>
</li>
</ul>
<p>等等等等…因为是否读研可以看做是人生小阶段的一个小小的分支，所以要想好自己路</p>
<p>就我个人而言，我的想法是：1.当前就业环境不佳，直接工作不一定能给我想要的生活；2.个人性格和出身原因，非常希望去到一个更高层次的地方（认知、知识和社交等）探索这个世界；</p>
<p>所以我决定考研，并且给自己两年的机会，好在最后达成了目标</p>
<h3 id="2-时间地点安排"><a href="#2-时间地点安排" class="headerlink" title="2.时间地点安排"></a>2.时间地点安排</h3><p>对于时间，首先得先大致了解一下<strong>考试的时间</strong>安排（什么时候考试，什么时候报名之类的），这些信息还是比较好搜集的，简单看一下，心里有个数。</p>
<p>然后是<strong>自己的时间</strong>，二战的话时间自由，一战的话了解一下自己学校的课程安排，学校应该不会用课程和实训来耽误学生考研学习（但也不乏例外，鼠鼠的本科某些院系就是，操作逆天，这里不予评价），如果真的遇到学校为难的，咨询上岸学长怎么处理的，这个应该不成问题。</p>
<p>对于<strong>学习地点</strong>的话，以鼠鼠的本科学校为例，对于一战的同学，前期的话可以去图书馆听课学习，但是到了强化和冲刺阶段，最好是选择学校提供的考研自习室，尽量不要去图书馆，因为受到开馆闭馆时间的限制，而自习室24小时开着，没人管，条件也更好（#60顶楼那个就不错）。</p>
<p>对于一战来说，有一个时间节点比较特殊，就是七八月的<strong>暑假</strong>。一般有三个选项：回家、留校、租房。暑假非常非常非常关键，一定选择自己适合的方式，这里仅避雷鼠鼠本科学校的留校，非常不好。另外两种的话，仁者见仁智者见智，鼠鼠是选择了攒钱租房闭关度过两个月，而鼠鼠的好朋友弓大大在家学习最终也取得了那一届最好的成绩（420+）。</p>
<p>最后就是<strong>学习时间</strong>，前期的基础阶段的话，鼠鼠认为无所谓，目标就是系统性的学一遍（学的好不好没差别，反正后面也会忘，这也为什么我认为那些很早开始的魔怔哥很逆天的原因，事实也证明，他们的做法确实无意义）。至于最后的冲刺阶段也很简单：“你有多少能量，就有多大作为”，这句话就是说到了快考试的那段时间，大家的精神和身体应该来说都相当疲惫了，尤其是精神，都有可能倦怠迷茫，那就得看自己的精神状态了，能学进去多少全看自己造化了。</p>
<p>所以鼠鼠主要分享一下<strong>强化阶段</strong>的时间安排，这个还是比较重要的：</p>
<table>
<thead>
<tr>
<th>时间</th>
<th>内容</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>7：00-7：30</td>
<td>起床+背单词</td>
<td></td>
</tr>
<tr>
<td>7：30-8：00</td>
<td>随机睡回笼觉</td>
<td>保证精神</td>
</tr>
<tr>
<td>8：00-9：00</td>
<td>英语真题</td>
<td>基础不好的可以继续背单词</td>
</tr>
<tr>
<td>9：30-11：00</td>
<td>408</td>
<td>也有人说跟真实考试一样，上午学数学，鼠鼠认为无所谓，后期模考的时候可以注意一下</td>
</tr>
<tr>
<td>11：30-13：30</td>
<td>吃饭+午休</td>
<td></td>
</tr>
<tr>
<td>13：30-16：00</td>
<td>高数</td>
<td></td>
</tr>
<tr>
<td>16：00-18：30</td>
<td>线代</td>
<td>很多人会踩的坑，线代和高数一定要一起学，都很重要，尤其是线代比较简单，纯送分</td>
</tr>
<tr>
<td>18：30-20：00</td>
<td>吃饭+骑车+洗澡</td>
<td>适量运动，不然身体会垮掉，鼠鼠整个半年都没感冒过</td>
</tr>
<tr>
<td>20：00-22：00</td>
<td>408</td>
<td></td>
</tr>
<tr>
<td>22：00-23：00</td>
<td>王者荣耀，启动！</td>
<td>蘸豆，爽！</td>
</tr>
<tr>
<td>23：00-00：00</td>
<td>休息</td>
<td>鼠鼠定力差，经常玩手机玩过头，不过感觉也无所谓</td>
</tr>
</tbody></table>
<blockquote>
<p>1.在整个备考期间一定要保证睡眠，至少要睡满7.5h(8h则更好)。睡眠充足对学习大有益处，虽然鼠鼠在这一点上做得很差。</p>
</blockquote>
<p>  2.计划是上面的计划，其实执行过程难免磕磕绊绊，比如睡个大懒觉、玩个一整天游戏或者出去旅游两天，都是小事，不要有负罪感，玩就爽玩，学就狂学。战略上拿下就行了，强化阶段战略是“<strong>闭关修炼</strong>”。</p>
<p>  3.另外说明的是，鼠鼠的英语有点小天赋，其实二战压根就没怎么学，单词都没背，所以同学们需要根据自身情况调整。</p>
<h3 id="3-考研择校"><a href="#3-考研择校" class="headerlink" title="3.考研择校"></a>3.考研择校</h3><p>首先一点比较颠覆性的认知是“选择大于努力”，这不是假大空的道理，也不是事后大家的玩梗，这是考研这件事（甚至是往后的人生）的准则，所以一定要重视择校这件事。</p>
<p>择校的几个关键点：</p>
<ul>
<li><p>确定考试科目：自命题 or 统考</p>
</li>
<li><p>确定目标院校档次：双一流 or 92</p>
</li>
<li><p>确定自身实力：近年真题 and 模拟考试</p>
</li>
<li><p>调研目标院校考情：各种分数指标 and 录取原则</p>
</li>
</ul>
<p>鼠鼠的个人观点：</p>
<ul>
<li><p>考虑地区时不要被家乡束缚，眼光要长远，虽然江苏确实是鼠鼠心目中全国最好的地区</p>
</li>
<li><p>推荐报考408，自命题非常不稳定，小心被坑死，鼠鼠已经死过一次了，所以大家不要贪图一两门课简单而失去了更大的优势，408其实不难，只是多</p>
</li>
<li><p>有实力的可以考11408，调剂时优势非常非常巨大</p>
</li>
<li><p>推荐双一流以上的院校，往下的不值得一上，除非没办法的时候</p>
</li>
<li><p>学习的时候留一两年的真题不做，留着摸摸自己的底</p>
</li>
<li><p>院校调研要多方位，微信公众号+B站+知乎+小红书等等等等</p>
</li>
</ul>
<p>鼠鼠属于是一念神魔选手，发挥好随便挑，发挥差简直一坨，所以二战综合选择了“一线城市+中上游211”这个目标。最后也欢迎学弟学妹也考来北京抱团。</p>
<h3 id="4-学科建议"><a href="#4-学科建议" class="headerlink" title="4.学科建议"></a>4.学科建议</h3><p>下面聊点具体的，但是一定要根据自身调整</p>
<p>总的来说：“是否能够上岸” &#x3D; “你的数学和专业课炸没炸”</p>
<p>所以，<em><strong>整个备考的重心始终要放在数学和专业课上</strong></em></p>
<p>举个例子，数学最低分值的选择填空为5分，英语完型填空为0.5分一个，而过去几年的完型均分大约也就5分，所以孰轻孰重，鼠鼠相信大家自己能判断</p>
<h4 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h4><p>鼠鼠个人感觉，这门学科就是简单考察个人素养，热爱国家，心中有理想，脚下有力量就行。</p>
<p>至于学习，12月的时候<strong>肖四肖八</strong>会出版，这将是唯一且最重要的学习资料。肖八写选择，听讲解，记忆知识点；肖四写选择，听讲解，背诵分析题。对于分析题，背下来还是比较难且枯燥的，推荐博主：大牙考研，他总结的带背版逻辑清晰，行为精简，更适合工科宝宝体质。</p>
<p>前期的话，可以吃饭的时候把徐涛强化课当故事听一听，图一乐。其他乱七八糟的什么1000题什么的不要写。</p>
<blockquote>
<p><strong>总结</strong>：前期按兵不动，最后做后冲刺，不要花太多心思（因为花了也没用）</p>
</blockquote>
<p>  （2025年肖4大翻车，或者说被反向押题了，但是不能否认这本资料在之后考试中的重要性）</p>
<h4 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h4><p>复习关键：<strong>单词+阅读</strong></p>
<p>单词，推荐使用手机软件背诵，随时随地背（虽然鼠鼠做不到），背上一两遍基本无敌了，基础不好一定要一直背。大部分的单词都只需要留下印象，看到以后知道是什么意思，不用会写。</p>
<p>阅读，通过真题学习，不要看任何其他资料，只会误导方向。鼠鼠在一战的时候是做了一遍所有的真题，包括英一和英二，个人感觉两者差不太多，一开始错的挺多，写着写着就入魔了，基本不会错，所以要多写。不要听人家说的神乎其神，阅读就是力大砖飞，干就完了。暑假的时候集中强化训练。真是耐听王的话，推荐看看唐迟的阅读课，有微乎其微的作用吧，不如力大砖飞。</p>
<p>作文，两年经验来看，推荐自己总结模板，分数更高，需要的可以直接找鼠鼠要，包牛逼的。时间大概是十月十一月开始学问题不大。底子差的可以听听石雷鹏的课，但是更推荐用鼠鼠我科研出来的模板。</p>
<p>其他题型，学一下做题方法就行，基本都是送分题，无需在意也不用专门复习，十一月看一下就行。<em>（语法，学个damn）</em></p>
<p>PS：如果你是像鼠鼠这种的偏科神人，直接不学也没事，可以省出很多时间给数学和408。</p>
<blockquote>
<p><strong>总结</strong>：单词一直背，阅读狠狠练，力大砖飞！</p>
</blockquote>
<h4 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h4><ol>
<li>时间段：</li>
</ol>
<ul>
<li><p>基础：4月-6月</p>
</li>
<li><p>强化：7月-10月</p>
</li>
<li><p>冲刺：11月-12月</p>
</li>
</ul>
<ol start="2">
<li>各阶段课程建议</li>
</ol>
<table>
<thead>
<tr>
<th>阶段</th>
<th>目标</th>
<th>课程</th>
<th>资料</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>基础</td>
<td>系统地学习一遍</td>
<td>三大名师任选其一：汤家凤、武忠祥、张宇</td>
<td></td>
<td></td>
</tr>
<tr>
<td>线代：李永乐老爷爷 or 没咋了救命课</td>
<td>对应的讲义资料即可</td>
<td>每个人习惯差异很大，每个老师的课听一两节，看看哪个舒服就选哪个。例如汤老师的南京口音鼠鼠感觉很亲切，有种回高中的感觉，有助睡眠（bushi，所以选择基础课听汤老师</td>
<td></td>
<td></td>
</tr>
<tr>
<td>强化</td>
<td>巩固知识点，学会做题</td>
<td>推荐：武忠祥 or 张宇</td>
<td></td>
<td></td>
</tr>
<tr>
<td>线代：李永乐老爷爷 or 没咋了救命课</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>习题讲解：B站一些优质博主，例如没咋了，已经记不清了，自行搜索鉴别</td>
<td>对应的强化讲义</td>
<td>强化重点在于做题而不是听课，当然了可也是必须要听的</td>
<td></td>
<td></td>
</tr>
<tr>
<td>注重习题复盘</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>冲刺</td>
<td>提升应试能力，狠狠地写试卷，针对性地复习</td>
<td>查漏补缺，B站上找需要的视频来看</td>
<td>各种真题模拟卷，建议：不要急着买，每年试卷质量不一样，等一手网上各个博主的测评，值得写再买</td>
<td>看视频缺哪补哪，不要看什么《17堂课》这种长长的课，你没有那个时间了</td>
</tr>
<tr>
<td>做套卷一定一定要计时，不然等于没做</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<ol start="3">
<li>学习指南（各种碎碎念）</li>
</ol>
<ul>
<li><p>数学一定要大段时间一起学，能进心流是最好</p>
</li>
<li><p>听课和练习要结合，学完就去写，不要猛猛听课</p>
</li>
<li><p>练习题选择要看网上的评测，是否适合自己</p>
</li>
<li><p>重视线代，这门学科有独特魔力，一个星期不碰＝从没学过，一定不能停，千万不要不信邪</p>
</li>
<li><p>学习过程：听课→例题→练习题→(全篇复习：错题二刷)</p>
</li>
<li><p>做题时间原则，5分的题，5分钟没写出来，直接跳过</p>
</li>
<li><p>做试卷的原则，速通然后检查，最后攻坚克难</p>
</li>
<li><p>冲刺阶段：2天一套模拟卷，一天做，一天复盘总结（必不可少）</p>
</li>
<li><p>做题本很有必要去做，用于回顾知识；笔记本，对于数学而言意义不大，不建议搞</p>
</li>
<li><p>不断思考学习方法有没有更好的改进</p>
</li>
<li><p>最后阶段集中攻克薄弱，例如反常积分不会，找到专题内容猛猛补就行</p>
</li>
<li><p>数学关键是做题能力，不要当耐听王，多动手</p>
</li>
<li><p>各个博主的优质内容一定要在有了基础前提下学习，不要上来就跟着某个up主学这学那</p>
</li>
<li><p>数学也是力大砖飞，计算能力要过关，例如25年的解答第一题，鼠鼠想到了五六种方法，最后发现只能分解硬算（悲</p>
</li>
<li><p>注意一些犄角旮旯的知识点，有时候出卷老头真的很逆天，25年搞了个万有引力直接爆了</p>
</li>
<li><p>记住数学的基础分就有120，所以不失误就已经赢了，要打牢基础，注重计算（鼠鼠就经常死在计算上，一定要多练）</p>
</li>
<li><p>跳出自己的舒适区，越不会越要搞会。这里我指的是自己的薄弱知识，而不是硬钢那些证明题</p>
</li>
</ul>
<ol start="4">
<li>其他问题</li>
</ol>
<ul>
<li><p>例如各个资料和试卷质量问题，鼠鼠写的挺多的，可以联系鼠鼠询问，就不一一列举</p>
</li>
<li><p>资料推荐买盗版或者电子版，省下来的钱上岸之后猛猛玩</p>
</li>
<li><p>上面都挺关键的，距离考试时间已经很久远了，想不到更多了，欢迎提问</p>
</li>
</ul>
<blockquote>
<p><strong>总结</strong>：基础不牢，地动山摇。多写题多总结 ＞ 耐听王。力大砖飞！</p>
</blockquote>
<h4 id="408"><a href="#408" class="headerlink" title="408"></a>408</h4><ol start="5">
<li>认知：</li>
</ol>
<ul>
<li><p>408的难度在于知识点的量很大，而不是知识点深度</p>
</li>
<li><p>408学习的精髓在于多次反复，因为他有很多文科的特性</p>
</li>
<li><p>408需要的时间也没有那么吓人，鼠鼠二战从7月开始学，仍然完完整整过了两遍，后期甚至没事干</p>
</li>
</ul>
<ol start="6">
<li>学习建议：</li>
</ol>
<p>  基础阶段就是听王道课，过一遍，很难的内容直接跳，例如计组中的一些东西非常难懂，没关系直接跳。与此同时做王道的课后题中的选择题，推荐使用电子的刷题本，然后打印下来。每题都要弄懂，相关知识点写旁边。习题讲解推荐：Boky、里昂学长或者王道官方。</p>
<p>  另外我听过Boky的其他课程，也非常非常推荐，这个女生讲解的很有条理，比起王道的课程更精简高效，全程班不知道质量如何，钱包有实力可以考虑。另外就是她的出版资料非常的棒，比起厚厚的王道书，简直就是神器，推荐入手，鼠鼠后期一直看得她的资料，再也没翻过王道书。</p>
<p>  强化的话，王道的强化课是比较推荐的，讲大题的解题方法与知识点的综合，尤其是存储相关的内容和PV相关的内容，跟着做题学习大题，会有茅塞顿开的感觉。</p>
<p>  然后就是真题阶段，这个阶段也非常重要，408最好的复习资料就是历年真题，鼠鼠认为至少要刷三遍以上才算吃透，要有一个错题本记录题目和知识点，因为408重复考察的很多。</p>
<p>  王道在12月中旬的时候会有一个冲刺课，可以去报个名听一下，咸鱼会把最后几天的重点都勾出来，然后剩下的几天如果没东西复习了，就可以跟着他的重点再复习一次。</p>
<ol start="7">
<li>其他：</li>
</ol>
<ul>
<li><p>不要钻牛角尖，例如红黑树之类的，差不多得了，408量比较大，完成度更重要</p>
</li>
<li><p>一步步进行，打牢基础，你会发现408并不难，尤其是写真题的时候</p>
</li>
</ul>
<h3 id="其他疑问"><a href="#其他疑问" class="headerlink" title="其他疑问"></a>其他疑问</h3><blockquote>
<p>欢迎邮箱留言，鼠鼠知无不言：<a href="mailto:&#x61;&#108;&#97;&#110;&#x5f;&#x72;&#111;&#111;&#116;&#x40;&#x6f;&#117;&#116;&#108;&#x6f;&#111;&#x6b;&#46;&#99;&#x6f;&#x6d;">&#x61;&#108;&#97;&#110;&#x5f;&#x72;&#111;&#111;&#116;&#x40;&#x6f;&#117;&#116;&#108;&#x6f;&#111;&#x6b;&#46;&#99;&#x6f;&#x6d;</a></p>
</blockquote>
]]></content>
      <categories>
        <category>经验分享</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
</search>
